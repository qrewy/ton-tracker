import TelegramBot from 'node-telegram-bot-api';
import config from '../config.js';
import { addWallet, removeWallet, getTrackedWallets } from './database.js';

const bot = new TelegramBot(config.bot_token, { polling: true });

bot.onText(/\/add (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const walletAddress = match[1];

  try {
    await addWallet(walletAddress);
    bot.sendMessage(chatId, `–ö–æ—à–µ–ª–µ–∫ ${walletAddress} –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.`);
  } catch (error) {
    bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞: ${error.message}`);
  }
});

bot.onText(/\/remove (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const walletAddress = match[1];

  try {
    await removeWallet(walletAddress);
    bot.sendMessage(chatId, `–ö–æ—à–µ–ª–µ–∫ ${walletAddress} —É–¥–∞–ª–µ–Ω –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.`);
  } catch (error) {
    bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞: ${error.message}`);
  }
});

bot.onText(/\/list/, async (msg) => {
  const chatId = msg.chat.id;

  try {
    const wallets = await getTrackedWallets();
    const walletList = wallets.length > 0 ? wallets.join('\n') : '–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.';
    bot.sendMessage(chatId, `–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–æ—à–µ–ª—å–∫–∏:\n${walletList}`);
  } catch (error) {
    bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–æ—à–µ–ª—å–∫–æ–≤: ${error.message}`);
  }
});

export async function sendTelegramNotification(wallet, change, newBalance) {
  const message = `
üü¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ TON –∫–æ—à–µ–ª—å–∫–∞!

–ê–¥—Ä–µ—Å: ${wallet}
–ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${change > 0 ? '+' : ''}${((change / 1e9).toFixed(2))} TON
–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${(newBalance / 1e9).toFixed(2)} TON
  `;
  await bot.sendMessage(config.chat_id, message);
}

export default bot;
